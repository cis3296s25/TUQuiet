# Database configuration
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Server configuration
server.port=${PORT:8080}

# Connection pool configuration - optimized for Neon free tier
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=120000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=580000
# Auto-disconnect timeout for Neon
spring.datasource.hikari.keepalive-time=60000

# JPA and Hibernate optimization - reduced batch size for free tier
spring.jpa.properties.hibernate.jdbc.batch_size=10
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.default_batch_fetch_size=20

# Logging configuration
logging.level.root=WARN
logging.level.edu.temple=INFO
logging.level.org.springframework.web=ERROR
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR

# Performance and caching - reduced for Neon free tier
spring.servlet.multipart.max-file-size=2MB
spring.servlet.multipart.max-request-size=2MB
server.tomcat.max-threads=50
server.tomcat.min-spare-threads=5
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/plain

# CORS configuration for frontend integration
spring.web.cors.allowed-origins=${ALLOWED_ORIGINS:*}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.max-age=3600

# Basic Actuator endpoints only
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=never

